
import os
import threading
from flask import Flask
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

TOKEN ="7997104197:AAFAI8wkZsIUkfvoVKgSd4XDZdkqNZg26hk"

app_web = Flask(__name__)

@app_web.route('/')
def home():
    return "Bot is alive!"

def run_web():
    port = int(os.getenv("PORT", 8080))
    app_web.run(host='0.0.0.0', port=port)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["üéµ –ú—É–∑—ã–∫–∞", "üì∫ –í–∏–¥–µ–æ"], ["üí¨ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º—É–∑—ã–∫–∞–Ω—Ç–æ–≤ üé∏", reply_markup=reply_markup)

async def music(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üéµ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–µ–∫–∏:\n1. https://example.com/track1\n2. https://example.com/track2")

async def video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üì∫ YouTube –ø–æ–¥–±–æ—Ä–∫–∞:\n1. https://youtu.be/example1\n2. https://youtu.be/example2")

async def suggest(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üí¨ –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –∏–¥–µ—é ‚Äî —è –ø–µ—Ä–µ–¥–∞–º –µ—ë –∞–¥–º–∏–Ω—É!")

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower() if update.message and update.message.text else ""
    if "–º—É–∑—ã–∫–∞" in text:
        await music(update, context)
    elif "–≤–∏–¥–µ–æ" in text:
        await video(update, context)
    elif "–ø—Ä–µ–¥–ª–æ–∂" in text:
        await suggest(update, context)
    else:
        await update.message.reply_text("–ù–µ –ø–æ–Ω—è–ª. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É.")

async def greet_new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    members = getattr(update.message, 'new_chat_members', []) if update.message else []
    for member in members:
        name = member.full_name or member.username or "–¥—Ä—É–≥"
        mention = f"@{member.username}" if getattr(member, 'username', None) else name
        await update.message.reply_text(f'–ü—Ä–∏–≤–µ—Ç, {mention}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–π –ª–∏—á–Ω—ã–π –±–ª–æ–≥ üé∂')

async def main():
    threading.Thread(target=run_web, daemon=True).start()
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("–º—É–∑—ã–∫–∞", music))
    app.add_handler(CommandHandler("–≤–∏–¥–µ–æ", video))
    app.add_handler(CommandHandler("–ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å", suggest))
    app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, greet_new_member))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

    print("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    await app.run_polling()

if __name__ == "__main__":
    import asyncio
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã")
